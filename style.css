// ===== ENHANCED MOBILE MENU FUNCTIONALITY =====
(function() {
    'use strict';

    const hamburger = document.getElementById('hamburger');
    const backdrop = document.getElementById('mobileMenuBackdrop');
    const menuPanel = document.getElementById('mobileMenuPanel');
    const closeBtn = document.getElementById('mobileMenuClose');
    const menuLinks = menuPanel.querySelectorAll('a');
    let lastFocusedElement = null;

    // Toggle mobile menu
    function toggleMobileMenu(show) {
        const isOpening = show ?? !backdrop.classList.contains('active');
        
        if (isOpening) {
            lastFocusedElement = document.activeElement;
            backdrop.classList.add('active');
            hamburger.classList.add('is-active');
            hamburger.setAttribute('aria-expanded', 'true');
            backdrop.setAttribute('aria-hidden', 'false');
            menuPanel.setAttribute('aria-hidden', 'false');
            document.documentElement.classList.add('no-scroll');
            
            // Set focus to close button
            setTimeout(() => closeBtn.focus(), 100);
            trapFocus(menuPanel);
        } else {
            backdrop.classList.remove('active');
            hamburger.classList.remove('is-active');
            hamburger.setAttribute('aria-expanded', 'false');
            backdrop.setAttribute('aria-hidden', 'true');
            menuPanel.setAttribute('aria-hidden', 'true');
            document.documentElement.classList.remove('no-scroll');
            releaseFocus();
            
            // Return focus to last focused element
            if (lastFocusedElement) {
                lastFocusedElement.focus();
            }
        }
    }

    // Focus trap implementation
    let focusTrapActive = false;

    function trapFocus(container) {
        if (!container) return;
        
        focusTrapActive = true;
        const focusableElements = getFocusableElements(container);
        if (focusableElements.length > 0) {
            // Focus is already on close button
        }

        function handleKey(e) {
            if (!focusTrapActive) return;
            
            if (e.key === 'Tab') {
                const focusables = getFocusableElements(container);
                if (focusables.length === 0) {
                    e.preventDefault();
                    return;
                }
                
                const first = focusables[0];
                const last = focusables[focusables.length - 1];
                
                if (e.shiftKey) {
                    if (document.activeElement === first) {
                        e.preventDefault();
                        last.focus();
                    }
                } else {
                    if (document.activeElement === last) {
                        e.preventDefault();
                        first.focus();
                    }
                }
            } else if (e.key === 'Escape') {
                e.preventDefault();
                toggleMobileMenu(false);
            }
        }
        
        document.addEventListener('keydown', handleKey);
        container._menuKeyHandler = handleKey;
    }

    function releaseFocus() {
        focusTrapActive = false;
        if (menuPanel._menuKeyHandler) {
            document.removeEventListener('keydown', menuPanel._menuKeyHandler);
            menuPanel._menuKeyHandler = null;
        }
    }

    function getFocusableElements(container) {
        const focusableSelectors = 'a[href], button:not([disabled]), textarea, input[type="text"], input[type="radio"], input[type="checkbox"], select, [tabindex]:not([tabindex="-1"])';
        return Array.from(container.querySelectorAll(focusableSelectors))
            .filter(el => {
                const rect = el.getBoundingClientRect();
                return (rect.width > 0 || rect.height > 0 || el.getClientRects().length > 0);
            });
    }

    // Event listeners
    hamburger.addEventListener('click', () => toggleMobileMenu(true));
    closeBtn.addEventListener('click', () => toggleMobileMenu(false));

    // Close menu when backdrop is clicked
    backdrop.addEventListener('click', (e) => {
        if (e.target === backdrop) {
            toggleMobileMenu(false);
        }
    });

    // Close menu when menu links are clicked
    menuLinks.forEach(link => {
        link.addEventListener('click', () => {
            toggleMobileMenu(false);
        });
    });

    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && backdrop.classList.contains('active')) {
            toggleMobileMenu(false);
        }
    });

    // Close menu on window resize (if resizing to larger screen)
    window.addEventListener('resize', () => {
        if (window.innerWidth > 900 && backdrop.classList.contains('active')) {
            toggleMobileMenu(false);
        }
    });

    // ===== EXISTING WEBSITE FUNCTIONALITY =====
    // Enhanced donation chips functionality
    document.querySelectorAll(".amounts").forEach((group) => {
        group.addEventListener("click", function(e) {
            const btn = e.target.closest("button[data-amount]");
            if (!btn) return;

            group
                .querySelectorAll(".chip")
                .forEach((c) => c.classList.remove("active"));
            btn.classList.add("active");

            const parent = group.closest(".don-card");
            const input = parent.querySelector("input");
            if (input)
                input.value = btn.getAttribute("data-amount");
        });
    });

    // Clear active chips when custom input is used
    document
        .querySelectorAll(".custom-amount input")
        .forEach((input) => {
            input.addEventListener("input", function() {
                const parent = this.closest(".don-card");
                parent
                    .querySelectorAll(".chip")
                    .forEach((c) => c.classList.remove("active"));
            });
        });

    // Enhanced volunteer form behavior
    const volunteerForm = document.getElementById("volunteer-form");

    if (volunteerForm) {
        volunteerForm.addEventListener("submit", function(e) {
            e.preventDefault();

            // Simple validation
            const name = document
                .getElementById("full-name")
                .value.trim();
            const email = document
                .getElementById("contact-email")
                .value.trim();
            const contact =
                document.getElementById("can-contact").checked;

            if (!name) {
                alert("Please provide your full name.");
                document.getElementById("full-name").focus();
                return;
            }

            if (!email) {
                alert("Please provide your email address.");
                document.getElementById("contact-email").focus();
                return;
            }

            if (!contact) {
                alert(
                    "Please agree to be contacted about volunteer opportunities.",
                );
                return;
            }

            // Show success message
            alert(
                "Thank you for your interest in volunteering! We have received your application and will contact you soon.",
            );
            volunteerForm.reset();
        });
    }

    // Enhanced scroll animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: "0px 0px -50px 0px",
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                entry.target.classList.add("visible");
            }
        });
    }, observerOptions);

    // Observe all sections
    document.querySelectorAll("section").forEach((section) => {
        observer.observe(section);
    });

    // Enhanced header behavior on scroll
    let lastScrollY = window.scrollY;
    const header = document.querySelector("header");

    window.addEventListener("scroll", () => {
        if (window.scrollY > 100) {
            header.style.background = "rgba(255, 255, 255, 0.95)";
            header.style.boxShadow =
                "0 2px 20px rgba(0, 0, 0, 0.1)";
        } else {
            header.style.background = "rgba(255, 255, 255, 0.98)";
            header.style.boxShadow = "none";
        }

        lastScrollY = window.scrollY;
    });

    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
        anchor.addEventListener("click", function(e) {
            const targetId = this.getAttribute("href");
            if (targetId === "#") return;

            const targetElement = document.querySelector(targetId);
            if (targetElement) {
                e.preventDefault();
                
                const headerHeight = document.querySelector("header").offsetHeight;
                const targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset - headerHeight;

                window.scrollTo({
                    top: targetPosition,
                    behavior: "smooth"
                });
            }
        });
    });

    console.log("Enhanced mobile menu initialized");
})();
